using System;using System.IO;using System.Collections.Generic;namespace IntroCS{   class MainClass   {      public static void Main ()      {         Console.ForegroundColor = ConsoleColor.White;         if (UI.Agree ("Hello, would you care to play a game?  ") == false) {            Console.WriteLine ("Fair enough, good luck in life");            return;         }         int difficulty=0;         do {            Console.Write ("Please choose your difficulty level.\nEnter e for easy, m for medium, or h for hard:  ");            string decision = Console.ReadLine ().ToLower ();            if (decision == "e") {               difficulty = 75;            }            if (decision == "m") {               difficulty = 50;            }            if (decision == "h") {               difficulty = 25;            }            if(difficulty==0){               Console.WriteLine("Bad format, please try again.");            }         } while(difficulty == 0);         Console.WriteLine ("\nWelcome to the Oregon Trail College Edition.\nHere you will have to budget your time and money\nLet's see if you can make it through a semester alive");         string name = UI.PromptLine ("\nWhat is your name?  ");         string major = UI.PromptLine ("\nHi, " + name + ", what is the full name of your major?  ");         if (major.ToLower () == "computer science") {            Console.WriteLine ("Good Choice.");         }         Dictionary<string, int> schedule = InitializeSched ();         int[] points = { 5, 5, 5, 5, 200 };         if(UI.Agree("\nOK, are you sure you want this to be your schedule?  ")==false){            schedule=ChangeSchedule(schedule);         }else{            Console.WriteLine("\nWonderful, let's get started");         }         Console.WriteLine ("\nYou start the semester with 200 dollars.\nIf you work, you can gain money.\nSometimes, you might choose to spend money.\nIf at any point in time, you run\nout of money, or if you can't budget time, then\nyou lose.\n");         Random prob=new Random();         List < IObstacle > things = new List<IObstacle> ();         things.Add (new Exam (major));         things.Add (new Project (major));         things.Add (new Flu());         for(int week=1; week<=15;week++){            if (UI.Agree ("\n\n\n\nWelcome to week " + week + ".\nBefore you start the week, would you like to change your schedule?") == true) {               schedule = ChangeSchedule (schedule);            }            if(prob.Next(0,100)>difficulty){               IObstacle obs = ObstacleSelect(major, things);               int[] values = obs.ObsEffect(points,schedule);               schedule ["classes"]=values[0];               schedule ["studying"]=values[1];               schedule ["groupwork"]=values[2];               schedule ["clubs"]=values[3];               schedule ["social"]=values[4];               schedule ["sleep"]=values[5];               schedule ["eat"]=values[6];               schedule ["work"]=values[7];               schedule ["money"]=values[8];               points [0] = values [9];               points [1] = values [10];               points [2] = values [11];               points [3] = values [12];               points [4] = values [13];            }else{               RandResponse ();            }         points = TestSchedule (schedule, points);         if (TestArray(points) == false) {            PlayerLost ();            return;            }         }//end for         PlayerWon (name,points);      }      public static Dictionary<string,int> ChangeSchedule(Dictionary<string,int> schedule){         Dictionary<string, int> newschedule = new Dictionary<string, int>();         if (UI.Agree ("Are you sure you want to change your schedule?") == true) {            int classes, studying, groupwork, clubs, social, sleep, eat, work;            do {               classes = 15 + UI.PromptInt ("Would you like to add more hours of class? \nIf so, how many? If not, enter zero. ");               studying = UI.PromptInt ("How many hours of studying per week? ");               groupwork = UI.PromptInt ("How many hours of group studying per week? ");               clubs = UI.PromptInt ("How many hours of clubs per week? ");               social = UI.PromptInt ("How many hours of social life per week? ");               sleep = UI.PromptInt ("How many hours of sleep per week? ");               eat = UI.PromptInt ("How many hours of eating per week? ");               work=UI.PromptInt ("How many hours of work per week? ");               if (classes + studying + groupwork + clubs + social + sleep + eat + work > 168) {                  Console.WriteLine ("You are over the limit (remember the built in 15 hours of class).\nPlease start again.");               }            } while(classes + studying + groupwork + clubs + social + sleep + eat +work>= 168);            int total = classes + studying + groupwork + clubs + social + sleep + eat+work;            int extra = 168 - total;            Console.WriteLine ("You have {0} hours of extra time", extra);            newschedule ["classes"] = classes;            newschedule ["studying"] = studying;            newschedule ["groupwork"] = groupwork;            newschedule ["clubs"] = clubs;            newschedule ["social"] = social;            newschedule ["sleep"] = sleep;            newschedule ["eat"] = eat;            newschedule ["work"] = work;            newschedule ["money"] = schedule["money"];         } else {            newschedule = schedule;            Console.WriteLine ("You're schedule was not changed.");         }         return newschedule;      }      public static int[] TestSchedule(Dictionary<string,int> schedule,int[] points){         Console.WriteLine ("\nHere is a review of the week:\nIf nothing is listed, then all is well:\n");         if(schedule["classes"]>schedule["studying"]+(0.5)*schedule["groupwork"]){            Console.WriteLine("Your grades are dropping");            points [0] = points [0] - 1;            if (points [0] == 2) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("Your grades are dangerously low,\nbe careful of failing out.\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [0] == 1) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("Last warning, you are about to fail out.\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [0] <= 0) {               Console.BackgroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("\nYour grades have dropped too low. You failed out.\n");               Console.ForegroundColor = ConsoleColor.White;               Console.BackgroundColor = ConsoleColor.Black;            }         }         if (schedule ["sleep"] < 48) {            Console.WriteLine ("You are getting sleep deprived.\nYou are now more prone to sickness");            points [1] = points [1] - 1;            if (points [1] == 2) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("You are seriously sleep deprived,\nanother couple weeks like that and you're done\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [1] == 1) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("Final warning, you haven't slept enough.\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [1] <= 0) {               Console.BackgroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("\nYour lack of sleep has made you too sick.\nYou dropped out to recover.\n");               Console.ForegroundColor = ConsoleColor.White;               Console.BackgroundColor = ConsoleColor.Black;            }         }         if (schedule ["eat"] < 13) {            Console.WriteLine ("You aren't eating enough.\nYou are going hungry.");            points [2] = points [2] - 1;            if (points [2] == 2) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("You are seriously hungry.\nBudget more time to eat or you might not make it.\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [2] == 1) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("Final warning, eat more, or you lose.\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [2] <= 0) {               Console.BackgroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("\nYou have died of starvation.\nNeedless to say, you didn't make it.\n");               Console.ForegroundColor = ConsoleColor.White;               Console.BackgroundColor = ConsoleColor.Black;            }         }         if (schedule ["clubs"] + schedule ["social"] < 20) {            Console.WriteLine ("You have no life");            points [3] = points [3] - 1;            if (points [3] == 2) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("You're lack of social life is threatening.\nSchedule social time or clubs or you'll lose motivation\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [3] == 1) {               Console.ForegroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("Last time to get a social life.\nOtherwise, you'll burn out\n");               Console.ForegroundColor = ConsoleColor.White;            }            if (points [3] <= 0) {               Console.BackgroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("\nYour lack of social life has caused you to burn out.\nYou drop out of college.\n");               Console.ForegroundColor = ConsoleColor.White;               Console.BackgroundColor = ConsoleColor.Black;            }            if (points [4] <= 0) {               Console.BackgroundColor = ConsoleColor.DarkRed;               Console.WriteLine ("\nYou ran out of money\nYou drop out of college.\n");               Console.ForegroundColor = ConsoleColor.White;               Console.BackgroundColor = ConsoleColor.Black;            }         }         Console.ForegroundColor = ConsoleColor.DarkGreen;         Console.WriteLine ("You spent {0} dollars on food this week", schedule["eat"] * 5);         points [4] = points [4] - schedule ["eat"] * 5;         Console.WriteLine ("You made {0} dollars this week from work", schedule ["work"] * 9);         points [4] = points [4] + schedule ["work"] * 9;         Console.WriteLine ("You now have {0} dollars left", points [4]);         Console.ForegroundColor = ConsoleColor.White;         return points;      }//end testschedule      public static bool TestArray (int[]points){         bool test = true;         foreach (int i in points) {            if (i <= 0) {               test = false;            }         }         return test;      }//end TestArray      public static IObstacle ObstacleSelect(string major, List<IObstacle> g)      {         Random rand = new Random ();         int n = g.Count;         int i = rand.Next(n);         IObstacle ret = g[i];         return ret;      }//end obstacleselect      public static void PlayerLost(){         Console.BackgroundColor = ConsoleColor.DarkRed;         Console.WriteLine ("I'm sorry, you lost");      }//end playerlost      public static void PlayerWon(string name, int[] points){         Console.WriteLine ("\n\n");         Console.BackgroundColor = ConsoleColor.DarkBlue;         Console.ForegroundColor = ConsoleColor.Yellow;         Console.WriteLine ("Congratulations, {0}.\nYou made it through a semester alive!\nYou ended with a GPA of {1}!\n\n\n\n\n\n\n\n\n", name,points[0]*4.0/5.0);      }      public static void RandResponse (){         Random rand = new Random ();         StreamReader reader = FIO.OpenReader("Responses.txt");         List<string> guessList =                  // rest of the file gives a            GetParagraphs(reader); //  list of random responses         reader.Close();         Console.WriteLine ("\n"+guessList [rand.Next (guessList.Count)]);      }//end randresponse      public static string ReadParagraph(StreamReader reader)      {                                               string line = reader.ReadLine () + "\n";         string s = "";         while (!string.IsNullOrWhiteSpace (line)) {            s += line;            line = reader.ReadLine () + "\n";         }         return s;      }      public static List<string> GetParagraphs(StreamReader reader)      {         List<string> all = new List<string>();         while (!reader.EndOfStream) {            all.Add (ReadParagraph (reader));         }         return all;      }//end getparagraph      public static Dictionary<string,int> InitializeSched()      {         Console.WriteLine ("\nThere are 168 hours in a week. \nThe areas of your life are:\nclass \nstudying \ngroupwork \nclubs\nwork\nsocial life\nsleep \nand eating.");         Console.WriteLine ("You must budget at least 15 hours of class. Besides that, the choices are yours.Any extra hours are yours for personal time.");         int classes, studying, groupwork, clubs, social, sleep, eat, work;         do {            classes = 15 + UI.PromptInt ("\nWould you like to add more hours of class? \nIf so, how many? If not, enter zero. ");            studying = UI.PromptInt ("How many hours of studying per week? ");            groupwork = UI.PromptInt ("How many hours of group studying per week? ");            clubs = UI.PromptInt ("How many hours of clubs per week? ");            social = UI.PromptInt ("How many hours of social life per week? ");            sleep = UI.PromptInt ("How many hours of sleep per week? ");            eat = UI.PromptInt ("How many hours of eating per week? ");            work =UI.PromptInt ("How many hours of work per week? ");            if(classes + studying + groupwork + clubs + social + sleep + eat+work>168){               Console.WriteLine("You are over the limit (remember the built in 15 hours of class).\nPlease start again.");            }         } while(classes + studying + groupwork + clubs + social + sleep + eat + work >= 168);         int total = classes + studying + groupwork + clubs + social + sleep + eat + work;         int extra = 168 - total;         Console.WriteLine ("You have {0} hours of extra time",extra);         Dictionary<string,int> schedule = new Dictionary<string,int>();         schedule["classes"]=classes;         schedule["studying"]=studying;         schedule ["groupwork"] = groupwork;         schedule ["clubs"] = clubs;         schedule["social"]=social;         schedule["sleep"]=sleep;         schedule["eat"]=eat;         schedule ["work"] = work;         schedule["money"]=200;         return schedule;      }//end InitializeSched   }}  END MAIN CLASSusing System;using System.IO;using System.Collections.Generic;namespace IntroCS{   public interface IObstacle   {      int[] ObsEffect (int[] points,Dictionary<string,int> schedule);   }}END INTERFACEusing System;using System.IO;using System.Collections.Generic;namespace IntroCS{   public class Exam : IObstacle    {      private string name;      public Exam(string major){         this.name = major + " Exam";      }      public int[] ObsEffect(int[] points, Dictionary<string, int> schedule){         int[] values = new int[14];         Console.ForegroundColor = ConsoleColor.Yellow;         Console.WriteLine ("\nYour professor has given you a {0}", this.name);         int classes, studying, groupwork, clubs, social, sleep, eat, work;         if (UI.Agree ("You can either add extra time to study, or not.\nIf you don't take enough time to study, your grades drop.\nWould you like to change your schedule to add hours to study?  ") == true) {            do {               classes = 15 + UI.PromptInt ("\nWould you like to add more hours of class? \nIf so, how many? If not, enter zero. ");               studying = UI.PromptInt ("How many hours of studying per week? ");               groupwork = UI.PromptInt ("How many hours of group studying per week? ");               clubs = UI.PromptInt ("How many hours of clubs per week? ");               social = UI.PromptInt ("How many hours of social life per week? ");               sleep = UI.PromptInt ("How many hours of sleep per week? ");               eat = UI.PromptInt ("How many hours of eating per week? ");               work = UI.PromptInt ("How many hours of work per week? ");               if (classes + studying + groupwork + clubs + social + sleep + eat + work > 168) {                  Console.WriteLine ("You are over the limit (remember the built in 15 hours of class).\nPlease start again.");               }            } while(classes + studying + groupwork + clubs + social + sleep + eat + work >= 168);            int total = classes + studying + groupwork + clubs + social + sleep + eat + work;            int extra = 168 - total;            Console.WriteLine ("You have {0} hours of extra time", extra);            if (schedule ["classes"] + 10 > schedule ["studying"] + (0.5) * schedule ["groupwork"]) {               points [0] = points [0] - 1;            }            if (schedule ["sleep"] < 48) {               points [1] = points [1] - 1;            }            if (schedule ["eat"] < 13) {               points [2] = points [2] - 1;            }            if (schedule ["clubs"] + schedule ["social"] < 20) {               points [3] = points [3] - 1;            }         } else {            points [0] = points [0] - 1;         }         values[0]=schedule ["classes"];         values[1]=schedule ["studying"];         values[2]=schedule ["groupwork"];         values [3]=schedule ["clubs"];         values [4]=schedule ["social"];         values [5]=schedule ["sleep"];         values [6]=schedule ["eat"];         values [7]=schedule ["work"];         values [8]=schedule ["money"];         values [9]=points [0];         values [10]=points [1];         values [11]=points [2];         values [12]=points [3];         values [13]=points [4];         Console.ForegroundColor = ConsoleColor.White;         return values;      }   }}using System;using System.IO;using System.Collections.Generic;namespace IntroCS{   public class Project : IObstacle    {      private string name;      public Project(string major){         this.name = major + " Project";      }      public int[] ObsEffect(int[] points, Dictionary<string,int> schedule){         int[] values = new int[14];         Console.ForegroundColor = ConsoleColor.Yellow;         Console.WriteLine("\nYour professor has given you a group {0}", this.name);         int classes, studying, groupwork, clubs, social, sleep, eat, work;         if (UI.Agree ("You can either add extra time for groupwork, or not.\nIf you don't take enough time to work on the project, your grades drop.\nWould you like to change your schedule to add hours? ") == true) {            do {               classes = 15 + UI.PromptInt ("\nWould you like to add more hours of class? \nIf so, how many? If not, enter zero. ");               studying = UI.PromptInt ("How many hours of studying per week? ");               groupwork = UI.PromptInt ("How many hours of group studying per week? ");               clubs = UI.PromptInt ("How many hours of clubs per week? ");               social = UI.PromptInt ("How many hours of social life per week? ");               sleep = UI.PromptInt ("How many hours of sleep per week? ");               eat = UI.PromptInt ("How many hours of eating per week? ");               work = UI.PromptInt ("How many hours of work per week? ");               if (classes + studying + groupwork + clubs + social + sleep + eat + work > 168) {                  Console.WriteLine ("You are over the limit (remember the built in 15 hours of class).\nPlease start again.");               }            } while(classes + studying + groupwork + clubs + social + sleep + eat + work >= 168);            int total = classes + studying + groupwork + clubs + social + sleep + eat + work;            int extra = 168 - total;            Console.WriteLine ("You have {0} hours of extra time", extra);            if (schedule ["classes"] + 10 > schedule ["studying"] + (0.5) * schedule ["groupwork"]) {               points [0] = points [0] - 1;            }            if (schedule ["sleep"] < 48) {               points [1] = points [1] - 1;            }            if (schedule ["eat"] < 13) {               points [2] = points [2] - 1;            }            if (schedule ["clubs"] + schedule ["social"] < 20) {               points [3] = points [3] - 1;            }         } else {            points [0] = points [0] - 1;         }         values[0]=schedule ["classes"];         values[1]=schedule ["studying"];         values[2]=schedule ["groupwork"];         values [3]=schedule ["clubs"];         values [4]=schedule ["social"];         values [5]=schedule ["sleep"];         values [6]=schedule ["eat"];         values [7]=schedule ["work"];         values [8]=schedule ["money"];         values [9]=points [0];         values [10]=points [1];         values [11]=points [2];         values [12]=points [3];         values [13]=points [4];         Console.ForegroundColor = ConsoleColor.White;         return values;      }   }}    using System;using System.IO;using System.Collections.Generic;namespace IntroCS{   public class Flu : IObstacle    {      private string name;      public Flu(){         this.name = "the flu";      }      public int[] ObsEffect(int[] points,Dictionary<string,int> schedule){         int[] values = new int[14];         Console.ForegroundColor = ConsoleColor.Yellow;         Console.WriteLine ("You have come down with {0}\nThis will last for only one week", this.name);         int classes, studying, groupwork, clubs, social, sleep, eat, work;         if (UI.Agree ("Because you are now sick, you need more time to sleep and eat? Would you like to change your schedule to accomodate this?  ") == true) {            do {               classes = 15 + UI.PromptInt ("\nWould you like to add more hours of class? \nIf so, how many? If not, enter zero. ");               studying = UI.PromptInt ("How many hours of studying per week? ");               groupwork = UI.PromptInt ("How many hours of group studying per week? ");               clubs = UI.PromptInt ("How many hours of clubs per week? ");               social = UI.PromptInt ("How many hours of social life per week? ");               sleep = UI.PromptInt ("How many hours of sleep per week? ");               eat = UI.PromptInt ("How many hours of eating per week? ");               work = UI.PromptInt ("How many hours of work per week? ");               if (classes + studying + groupwork + clubs + social + sleep + eat + work > 168) {                  Console.WriteLine ("You are over the limit (remember the built in 15 hours of class).\nPlease start again.");               }            } while(classes + studying + groupwork + clubs + social + sleep + eat + work >= 168);            int total = classes + studying + groupwork + clubs + social + sleep + eat + work;            int extra = 168 - total;            Console.WriteLine ("You have {0} hours of extra time", extra);            if (schedule ["classes"] > schedule ["studying"] + (0.5) * schedule ["groupwork"]) {               points [0] = points [0] - 1;            }            if (schedule ["sleep"] < 75) {               points [1] = points [1] - 1;            }            if (schedule ["eat"] < 20) {               points [2] = points [2] - 1;            }            if (schedule ["clubs"] + schedule ["social"] < 20) {               points [3] = points [3] - 1;            }         } else {            points [0] = points [0] - 1;         }         values[0]=schedule ["classes"];         values[1]=schedule ["studying"];         values[2]=schedule ["groupwork"];         values [3]=schedule ["clubs"];         values [4]=schedule ["social"];         values [5]=schedule ["sleep"];         values [6]=schedule ["eat"];         values [7]=schedule ["work"];         values [8]=schedule ["money"];         values [9]=points [0];         values [10]=points [1];         values [11]=points [2];         values [12]=points [3];         values [13]=points [4];         Console.ForegroundColor = ConsoleColor.White;         return values;      }   }}END CLASSESYou lucked out!Nothing new this weekYou lucky dog,nothing unexpected this weekThis is too easy,nothing happened this weekNothing new this week,Don't you wish that happened all the time?Keep going strong,nothing new happened this weekIf college were this easy,everyone would do itYou're professors were nice this week,nothing unexpected happenedEND TEXT FILE TO BE READ FROM